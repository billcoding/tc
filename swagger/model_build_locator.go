/*
 * TeamCity REST API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 2018.1
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

// Represents a locator string for filtering Build entities.
type BuildLocator struct {
	// Project (direct or indirect parent) locator.
	AffectedProject string `json:"affectedProject,omitempty"`
	// Agent locator.
	Agent string `json:"agent,omitempty"`
	// typeId of agent used to execute build.
	AgentTypeId int32 `json:"agentTypeId,omitempty"`
	// State can be any.
	Any                bool   `json:"any,omitempty"`
	ArtifactDependency string `json:"artifactDependency,omitempty"`
	// Branch locator.
	Branch string `json:"branch,omitempty"`
	// Build type locator.
	BuildType string `json:"buildType,omitempty"`
	// Is canceled.
	Canceled bool `json:"canceled,omitempty"`
	// Agent locator.
	CompatibleAgent string `json:"compatibleAgent,omitempty"`
	// Is composite.
	Composite bool `json:"composite,omitempty"`
	// For paginated calls, how many entities to return per page.
	Count int32 `json:"count,omitempty"`
	// If true, applies default filter which returns only \"normal\" builds (finished builds which are not canceled, not failed-to-start, not personal, and on default branch (in branched build configurations)).
	DefaultFilter bool `json:"defaultFilter,omitempty"`
	// Is failed to start.
	FailedToStart bool `json:"failedToStart,omitempty"`
	// Requires either date or build dimension.
	FinishDate string `json:"finishDate,omitempty"`
	// Is finished.
	Finished bool `json:"finished,omitempty"`
	// Is hanging.
	Hanging bool `json:"hanging,omitempty"`
	// Is history build.
	History bool `json:"history,omitempty"`
	// Entity ID.
	Id int32 `json:"id,omitempty"`
	// Supply multiple locators and return a union of the results.
	Item string `json:"item,omitempty"`
	// Limit processing to the latest `<lookupLimit>` entities.
	LookupLimit int32  `json:"lookupLimit,omitempty"`
	Number      string `json:"number,omitempty"`
	// Is a personal build.
	Personal bool `json:"personal,omitempty"`
	// Is pinned.
	Pinned bool `json:"pinned,omitempty"`
	// Project (direct parent) locator.
	Project  string `json:"project,omitempty"`
	Property string `json:"property,omitempty"`
	// Is queued.
	Queued bool `json:"queued,omitempty"`
	// Requires either date or build dimension.
	QueuedDate string `json:"queuedDate,omitempty"`
	// Build revision.
	Revision string `json:"revision,omitempty"`
	// Is running.
	Running            bool   `json:"running,omitempty"`
	SnapshotDependency string `json:"snapshotDependency,omitempty"`
	// For paginated calls, from which entity to start rendering the page.
	Start int32 `json:"start,omitempty"`
	// Requires either date or build dimension.
	StartDate string `json:"startDate,omitempty"`
	State     string `json:"state,omitempty"`
	Status    string `json:"status,omitempty"`
	// Tag locator.
	Tag string `json:"tag,omitempty"`
	// ID of a build or build promotion.
	TaskId int32 `json:"taskId,omitempty"`
	// For personal builds checks the owner of the build, triggerring user in other cases.
	User string `json:"user,omitempty"`
}
